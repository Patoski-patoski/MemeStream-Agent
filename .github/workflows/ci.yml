name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Cache Playwright browsers
      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # 5. Install Playwright browsers if not cached
      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      # 6. Lint code
      - name: Lint code
        run: npx eslint .

      # 7. Run tests
      - name: Run tests
        run: npm test

      # 8. Build project
      - name: Build project
        run: npm run build

      # 9. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # 10. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            patrickpatoski/meme-bot:latest
            patrickpatoski/meme-bot:${{ github.sha }}
